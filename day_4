#include <iostream>
#include <vector>
#include <algorithm> 

using namespace std;

class Solution {
public:
    vector<int> twoSum(vector<int> &nums, int target) {
        vector<pair<int, int>> indexedArray;

        for (int i = 0; i < nums.size(); i++) {
            indexedArray.push_back({nums[i], i});
        }

       
        sort(indexedArray.begin(), indexedArray.end());

        int left = 0;
        int right = nums.size() - 1;

     
        while (left < right) {
            int sum = indexedArray[left].first + indexedArray[right].first;
            if (sum == target) {
                return {indexedArray[left].second, indexedArray[right].second}; 
            } else if (sum > target) {
                right--;
            } else {
                left++;
            }
        }
        return {}; 
    }
};

int main() {
    int n;
    cout << "Enter the total number of elements: ";
    cin >> n;
    vector<int> nums(n);
    cout << "Enter the elements: ";
    for (int i = 0; i < n; i++) {
        cin >> nums[i];
    }
    int target;
    cout << "Enter the target: ";
    cin >> target;

    Solution solution;
    vector<int> result = solution.twoSum(nums, target);

    if (!result.empty()) {
        cout << "The indices of the two numbers that add up to the target are: " << result[0] << " " << result[1] << endl;
    } else {
        cout << "No valid pair found." << endl;
    }

    return 0;
}
